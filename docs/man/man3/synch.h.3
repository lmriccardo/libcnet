.TH "includes/utils/synch.h" 3 "Version v01.01r" "libcnet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
includes/utils/synch.h
.SH SYNOPSIS
.br
.PP
\fR#include <sys/cdefs\&.h>\fP
.br
\fR#include <sys/types\&.h>\fP
.br
\fR#include <semaphore\&.h>\fP
.br
\fR#include <stdio\&.h>\fP
.br
\fR#include <stdlib\&.h>\fP
.br
\fR#include 'utils/version\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "__BEGIN_DECLS void \fBsynchronizeRTT\fP (void *_sender, void *_recv, void *_timer) __attribute__((nonnull))"
.br
.ti -1c
.RI "void \fBsyncrhonizeSendReceive\fP (void *_sender, void *_recv) __attribute__((nonnull))"
.br
.ti -1c
.RI "void \fBsemaphore_init\fP (sem_t *_sem, int _phsared, unsigned int _value, const char *_fname) __attribute__((nonnull))"
.br
.ti -1c
.RI "void \fBsemaphore_wait\fP (sem_t *_sem, const char *_fname) __attribute__((nonnull))"
.br
.ti -1c
.RI "void \fBsemaphore_post\fP (sem_t *_sem, const char *_fname) __attribute__((nonnull))"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void semaphore_init (sem_t * _sem, int _phsared, unsigned int _value, const char * _fname)\fR [extern]\fP"
Initialize a semaphore 
.SS "void semaphore_post (sem_t * _sem, const char * _fname)\fR [extern]\fP"
Signal all the other processes to access critical resources 
.SS "void semaphore_wait (sem_t * _sem, const char * _fname)\fR [extern]\fP"
Await for the semaphore to be unlocked 
.SS "__BEGIN_DECLS void synchronizeRTT (void * _sender, void * _recv, void * _timer)\fR [extern]\fP"
Synchronize a sender and a receiver with the same timer 
.SS "void syncrhonizeSendReceive (void * _sender, void * _recv)\fR [extern]\fP"
Synchronize the sender and the receiver setting a semaphore 
.SH "Author"
.PP 
Generated automatically by Doxygen for libcnet from the source code\&.
