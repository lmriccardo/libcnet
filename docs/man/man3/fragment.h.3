.TH "includes/utils/fragment.h" 3 "Version v01.01r" "libcnet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
includes/utils/fragment.h
.SH SYNOPSIS
.br
.PP
\fR#include <sys/cdefs\&.h>\fP
.br
\fR#include <sys/types\&.h>\fP
.br
\fR#include <math\&.h>\fP
.br
\fR#include 'ip\&.h'\fP
.br
\fR#include 'utils/version\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBFragmentList\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcomputeNumberOfFragments\fP (const size_t _sizem, const size_t _max)"
.br
.ti -1c
.RI "struct \fBFragmentList\fP * \fBcreateFragments\fP (const char *_buffer, const size_t _size, const size_t _max) __attribute__((nonnull)) __attribute__((returns_nonnull))"
.br
.ti -1c
.RI "void \fBFragmentList_delete\fP (struct \fBFragmentList\fP *_fraglist) __attribute__((nonnull))"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int computeNumberOfFragments (const size_t _sizem, const size_t _max)\fR [extern]\fP"
Compute the number of fragments to create with an IP Packet payload of input size 
.SS "struct \fBFragmentList\fP * createFragments (const char * _buffer, const size_t _size, const size_t _max)\fR [extern]\fP"
Create all the fragments and returns the structure containing the list with all pointer to fragmented Ip packets and its size 
.SS "void FragmentList_delete (struct \fBFragmentList\fP * _fraglist)\fR [extern]\fP"
Free the memory allocated for the fragment list 
.SH "Author"
.PP 
Generated automatically by Doxygen for libcnet from the source code\&.
